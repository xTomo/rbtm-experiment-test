{
	"info": {
		"_postman_id": "d5f6e7fd-0030-41ce-9958-979e99bcf346",
		"name": "RBTM Experiment",
		"description": "RBTM Experiment",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Source",
			"item": [
				{
					"name": "Power on",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "02554539-f68d-45f4-825e-aadd0ceab545",
								"type": "text/javascript",
								"exec": [
									"pm.test('response is ok', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('response is success', () => {",
									"    ",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"",
									"});",
									"",
									"postman.setNextRequest('Set voltage');",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{sourceUrl}}/power-on",
							"host": [
								"{{sourceUrl}}"
							],
							"path": [
								"power-on"
							]
						}
					},
					"response": []
				},
				{
					"name": "Power off",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2ef3d585-63d1-4da0-b93c-55f4f09c1b2b",
								"type": "text/javascript",
								"exec": [
									"pm.test('response is ok', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('response is success', () => {",
									"    ",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"",
									"});",
									"",
									"postman.setNextRequest('Start');",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{sourceUrl}}/power-off",
							"host": [
								"{{sourceUrl}}"
							],
							"path": [
								"power-off"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set voltage",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7c3fcc04-bcd0-4eb1-9b78-af9e0d30b40e",
								"type": "text/javascript",
								"exec": [
									"pm.test('response is ok', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('response is success', () => {",
									"    ",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"",
									"});",
									"",
									"postman.setNextRequest('Set current');",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "2.0"
						},
						"url": {
							"raw": "{{sourceUrl}}/set-voltage",
							"host": [
								"{{sourceUrl}}"
							],
							"path": [
								"set-voltage"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set current",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5b5466a6-7402-4102-a0be-828af0ba005c",
								"type": "text/javascript",
								"exec": [
									"pm.test('response is ok', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('response is success', () => {",
									"    ",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"",
									"});",
									"",
									"postman.setNextRequest('Get voltage');",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "2.0"
						},
						"url": {
							"raw": "{{sourceUrl}}/set-current",
							"host": [
								"{{sourceUrl}}"
							],
							"path": [
								"set-current"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get voltage",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "11c19744-0a14-45e1-997a-e527cbba94be",
								"type": "text/javascript",
								"exec": [
									"pm.test('response is ok', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('response is success', () => {",
									"    ",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"",
									"});",
									"",
									"postman.setNextRequest('Get current');",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{sourceUrl}}/get-voltage",
							"host": [
								"{{sourceUrl}}"
							],
							"path": [
								"get-voltage"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get current",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "71a0e89a-be76-4bfd-b25c-25d7226cac6a",
								"type": "text/javascript",
								"exec": [
									"pm.test('response is ok', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('response is success', () => {",
									"    ",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"",
									"});",
									"",
									"postman.setNextRequest('State');",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{sourceUrl}}/get-current",
							"host": [
								"{{sourceUrl}}"
							],
							"path": [
								"get-current"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "State",
			"item": [
				{
					"name": "State",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b3c2de2f-7d0b-474f-afd8-e4aef6c14dca",
								"type": "text/javascript",
								"exec": [
									"pm.test('response is ok', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('response is success', () => {",
									"    ",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"",
									"});",
									"",
									"postman.setNextRequest('Open shutter');",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{stateUrl}}",
							"host": [
								"{{stateUrl}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Shutter",
			"item": [
				{
					"name": "Open shutter",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d597d7c6-018e-4b47-950d-bdaca61b7a2c",
								"type": "text/javascript",
								"exec": [
									"pm.test('response is ok', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('response is success', () => {",
									"    ",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"",
									"});",
									"",
									"postman.setNextRequest('Shutter state');",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{shutterUrl}}/open/1",
							"host": [
								"{{shutterUrl}}"
							],
							"path": [
								"open",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Close shutter",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4d04b09d-7d5a-4b28-b736-54bb9a378f48",
								"type": "text/javascript",
								"exec": [
									"pm.test('response is ok', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('response is success', () => {",
									"    ",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"",
									"});",
									"",
									"postman.setNextRequest('Get frame with closed shutter');",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{shutterUrl}}/close/1",
							"host": [
								"{{shutterUrl}}"
							],
							"path": [
								"close",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Shutter state",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3d15053-5f02-481d-a753-0b4a82896335",
								"type": "text/javascript",
								"exec": [
									"pm.test('response is ok', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('response is success', () => {",
									"    ",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"",
									"});",
									"",
									"postman.setNextRequest('Set horizontal position');",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{shutterUrl}}/state",
							"host": [
								"{{shutterUrl}}"
							],
							"path": [
								"state"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Motor",
			"item": [
				{
					"name": "Set horizontal position",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8e3dd535-a2f3-4adb-8266-1eeadf3fd454",
								"type": "text/javascript",
								"exec": [
									"pm.environment.set(\"last request\", \"Set horizontal position\");",
									"",
									"pm.test('response is ok', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('response is success', () => {",
									"    ",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"",
									"});",
									"",
									"postman.setNextRequest('Get horizontal position');",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "1"
						},
						"url": {
							"raw": "{{motorUrl}}/set-horizontal-position",
							"host": [
								"{{motorUrl}}"
							],
							"path": [
								"set-horizontal-position"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set vertical position",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "66f5e034-1bdb-46f6-8fc7-e9d67872098c",
								"type": "text/javascript",
								"exec": [
									"pm.test('response is ok', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('response is success', () => {",
									"    ",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"",
									"});",
									"",
									"postman.setNextRequest('Get vertical position');",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "1"
						},
						"url": {
							"raw": "{{motorUrl}}/set-vertical-position",
							"host": [
								"{{motorUrl}}"
							],
							"path": [
								"set-vertical-position"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set angle position",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f7acb057-c9fb-4108-ac2f-99f81e02d82c",
								"type": "text/javascript",
								"exec": [
									"pm.environment.set(\"last request\", \"Set angle position\");",
									"",
									"pm.test('response is ok', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('response is success', () => {",
									"    ",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"",
									"});",
									"",
									"postman.setNextRequest('Get angle position');",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "1"
						},
						"url": {
							"raw": "{{motorUrl}}/set-angle-position",
							"host": [
								"{{motorUrl}}"
							],
							"path": [
								"set-angle-position"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get horizontal position",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e9f08b1b-e431-48c7-8bd4-9590b7703d09",
								"type": "text/javascript",
								"exec": [
									"pm.test('response is ok', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('response is success', () => {",
									"    ",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    ",
									"    const lastRequest = pm.environment.get(\"last request\");",
									"",
									"    console.log(lastRequest);",
									"    ",
									"    if (lastRequest === 'Set horizontal position') {",
									"",
									"        pm.expect(jsonData.result).to.equal(1);",
									"        postman.setNextRequest('Set vertical position');",
									"        ",
									"    } else if (lastRequest === 'Move away') {",
									"        ",
									"        pm.expect(jsonData.result).to.equal(-4200);",
									"        postman.setNextRequest('Move back');",
									"        ",
									"    } else if (lastRequest === 'Move back') {",
									"        ",
									"        pm.expect(jsonData.result).to.equal(1);",
									"        postman.setNextRequest('Reset angle position');",
									"",
									"    } else {",
									"",
									"        postman.setNextRequest(null);",
									"",
									"    }",
									"",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{motorUrl}}/get-horizontal-position",
							"host": [
								"{{motorUrl}}"
							],
							"path": [
								"get-horizontal-position"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get vertical position",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "31890251-2405-4bfa-b28e-252355816701",
								"type": "text/javascript",
								"exec": [
									"pm.test('response is ok', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('response is success', () => {",
									"    ",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.result).to.equal(1);",
									"",
									"});",
									"",
									"postman.setNextRequest('Set angle position');",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{motorUrl}}/get-vertical-position",
							"host": [
								"{{motorUrl}}"
							],
							"path": [
								"get-vertical-position"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get angle position",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bcd5fada-a2ca-4774-83cc-70e38bb08a0a",
								"type": "text/javascript",
								"exec": [
									"pm.test('response is ok', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('response is success', () => {",
									"    ",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    ",
									"    const lastRequest = pm.environment.get(\"last request\");",
									"    ",
									"    if (lastRequest === \"Set angle position\") {",
									"",
									"        pm.expect(jsonData.result).to.equal(1);",
									"        postman.setNextRequest('Move away');",
									"        ",
									"    } else if (lastRequest === 'Reset angle position') {",
									"        ",
									"        pm.expect(jsonData.result).to.equal(0);",
									"        postman.setNextRequest('Get frame');",
									"",
									"    }",
									"    ",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{motorUrl}}/get-angle-position",
							"host": [
								"{{motorUrl}}"
							],
							"path": [
								"get-angle-position"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reset angle position",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b6c0b226-00ea-436d-86a2-1e32748b266e",
								"type": "text/javascript",
								"exec": [
									"pm.environment.set(\"last request\", \"Reset angle position\");",
									"",
									"pm.test('response is ok', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('response is success', () => {",
									"    ",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"",
									"});",
									"",
									"postman.setNextRequest('Get angle position');",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{motorUrl}}/reset-angle-position",
							"host": [
								"{{motorUrl}}"
							],
							"path": [
								"reset-angle-position"
							]
						}
					},
					"response": []
				},
				{
					"name": "Move away",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1d1c73f2-1678-43a4-857d-ce0358a1ca69",
								"type": "text/javascript",
								"exec": [
									"pm.environment.set('last request', 'Move away');",
									"",
									"pm.test('response is ok', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('response is success', () => {",
									"    ",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"",
									"});",
									"",
									"postman.setNextRequest('Get horizontal position');",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{motorUrl}}/move-away",
							"host": [
								"{{motorUrl}}"
							],
							"path": [
								"move-away"
							]
						}
					},
					"response": []
				},
				{
					"name": "Move back",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "61cb4deb-a3af-4459-8eb3-8b901f51318e",
								"type": "text/javascript",
								"exec": [
									"pm.environment.set('last request', 'Move back');",
									"",
									"pm.test('response is ok', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('response is success', () => {",
									"    ",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"",
									"});",
									"",
									"postman.setNextRequest('Get horizontal position');",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{motorUrl}}/move-back",
							"host": [
								"{{motorUrl}}"
							],
							"path": [
								"move-back"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Detector",
			"item": [
				{
					"name": "Get frame",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1e6b8ff8-4003-469c-ae32-cf66887bd66a",
								"type": "text/javascript",
								"exec": [
									"pm.test('response is ok', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"postman.setNextRequest('Chip temp');",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "1"
						},
						"url": {
							"raw": "{{detectorUtl}}/get-frame",
							"host": [
								"{{detectorUtl}}"
							],
							"path": [
								"get-frame"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get frame with closed shutter",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "185a449f-b80e-48df-ac61-8a2866fad5fe",
								"type": "text/javascript",
								"exec": [
									"pm.test('response is ok', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"postman.setNextRequest('Power off');",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "1"
						},
						"url": {
							"raw": "{{detectorUtl}}/get-frame-with-closed-shutter",
							"host": [
								"{{detectorUtl}}"
							],
							"path": [
								"get-frame-with-closed-shutter"
							]
						}
					},
					"response": []
				},
				{
					"name": "Chip temp",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "555883f1-772f-4c7e-85ec-e64be375dce8",
								"type": "text/javascript",
								"exec": [
									"pm.test('response is ok', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('response is success', () => {",
									"    ",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"",
									"});",
									"",
									"postman.setNextRequest('Hous temp');",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{detectorUtl}}/chip_temp",
							"host": [
								"{{detectorUtl}}"
							],
							"path": [
								"chip_temp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Hous temp",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ca61af9e-e4e0-469e-abb0-43ac9ae467d9",
								"type": "text/javascript",
								"exec": [
									"pm.test('response is ok', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('response is success', () => {",
									"    ",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"",
									"});",
									"",
									"postman.setNextRequest('Close shutter');",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{detectorUtl}}/hous_temp",
							"host": [
								"{{detectorUtl}}"
							],
							"path": [
								"hous_temp"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Experiment",
			"item": [
				{
					"name": "Start",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ea27792a-96a4-4ac8-8155-35d6d147693e",
								"exec": [
									"pm.test('response is ok', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('response is success', () => {",
									"    ",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"",
									"});",
									"",
									"postman.setNextRequest('Stop');",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "25fad4a4-daab-468f-9cb6-0b629966af78",
								"exec": [
									"var moment = require('moment')",
									"pm.globals.set(\"date\", moment().format(\"DD.MM.YYY HH:mm:ss\"))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"exp_id\": \"{{$guid}}\",\n\t\"specimen\": \"postman test specimen\",\n\t\"tags\": \"postman test\",\n\t\"timestamp\": {{$timestamp}},\n\t\"datetime\": \"{{date}}\",\n\t\"experiment parameters\":\n\t{\n\t\t\"advanced\": false,\n\t\t\"DARK\":\n\t\t{\n\t\t\t\"count\": 1,\n\t\t\t\"exposure\": 1.0\n\t\t},\n\t\t\"EMPTY\":\n\t\t{\n\t\t\t\"count\": 2,\n\t\t\t\"exposure\": 2.0\n\t\t},\n\t\t\"DATA\":\n\t\t{\n\t\t\t\"step count\": 3,\n\t\t\t\"exposure\": 3.0,\n\t\t\t\"angle step\": 3.0,\n\t\t\t\"count per step\": 3\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{experimentUrl}}/start",
							"host": [
								"{{experimentUrl}}"
							],
							"path": [
								"start"
							]
						}
					},
					"response": []
				},
				{
					"name": "Stop",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "434146b4-f67a-474a-a507-09fa76ce271b",
								"type": "text/javascript",
								"exec": [
									"pm.test('response is ok', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('response is success', () => {",
									"    ",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"",
									"});",
									"",
									"postman.setNextRequest(null);",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{experimentUrl}}/stop",
							"host": [
								"{{experimentUrl}}"
							],
							"path": [
								"stop"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}